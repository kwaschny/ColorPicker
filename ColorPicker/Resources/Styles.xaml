<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ColorPicker.Converters"
                    xmlns:controls="clr-namespace:ColorPicker.Controls">
    <!--CONVERTERS-->
    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
    <converters:DrawingColorToSolidColorBrushConverter x:Key="DrawingColorToSolidColorBrushConverter"/>

    <!--COLORS-->
    <RadialGradientBrush
        x:Key="CenterGradientColor"
        GradientOrigin="0.5,0.5"
        Center="0.5,0.5" 
        RadiusX="0.5" 
        RadiusY="0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#404040" Offset="0" />
            <GradientStop Color="#303030" Offset="0.8" />
            <GradientStop Color="#202020" Offset="1.0" />
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <SolidColorBrush Color="#CCFFFFFF" x:Key="hoverBrush"/>

    <!-- CIRCULAR MENU -->
    <Style TargetType="controls:CircularMenu">
        <Style.Triggers>
            <Trigger Property="IsOpen" Value="True">
                <!-- CircularMenu openning animation -->
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.75" KeySpline="0.4,1,0.1,1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.75" KeySpline="0.4,1,0.1,1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.75" KeySpline="0.4,1,0.1,1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetProperty="RenderTransform.Children[1].Angle">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.75" KeySpline="0.4,1,0.1,1" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <!-- CircularMenu closing animation -->
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" KeySpline="0.4,1,0.1,1" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" KeySpline="0.4,1,0.1,1" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" KeySpline="0.4,1,0.1,1" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetProperty="RenderTransform.Children[1].Angle">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" KeySpline="0.4,1,0.1,1" Value="-50"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
        </Style.Triggers>

        <!-- Default CircularMenu style (while closed) -->
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Height" Value="600"/>
        <Setter Property="Width" Value="600"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform CenterX="300" CenterY="300" ScaleX="0.3" ScaleY="0.3"/>
                    <RotateTransform CenterX="300" CenterY="300" Angle="-120"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CircularMenu">
                    <Grid>
                        <!-- CircularMenu background - color between buttons  -->
                        <Ellipse  Width="{TemplateBinding Width}" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" StrokeThickness="0"/>

                        <!-- Content repitition (for items around) -->
                        <ItemsControl ItemsSource="{TemplateBinding Content}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>

                        <!-- Content (for central item) -->
                        <ContentPresenter Content="{TemplateBinding CentralItem}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CIRCULAR MENU CENTRAL ITEM-->

    <Style TargetType="controls:CircularMenuCentralItem">
        <Setter Property="Width" Value="180"/>
        <Setter Property="Height" Value="180"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Panel.ZIndex" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CircularMenuCentralItem">
                    <Grid>
                        <Ellipse UseLayoutRounding="True" Stroke="White" StrokeThickness="4" Fill="{StaticResource CenterGradientColor}"/>
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock Margin="5" Text="{TemplateBinding ContentText}" Foreground="White" FontSize="16" FontWeight="Light" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <TextBlock Margin="5" Text="{TemplateBinding ColorName}" Visibility="{TemplateBinding IsColorNameVisible,  Converter={StaticResource bool2VisibilityConverter}}" Foreground="White" FontSize="15" FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CIRCULAR MENU ITEM-->

    <Style TargetType="controls:CircularMenuItem">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="EdgeBackground" Value="{StaticResource hoverBrush}"/>
                <Setter Property="Panel.ZIndex" Value="10"/>
                <Setter Property="BorderThickness" Value="4"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="EdgeBackground" Value="White"/>
                <Setter Property="Panel.ZIndex" Value="10"/>
            </Trigger>
        </Style.Triggers>

        <Setter Property="Width" Value="600"/>
        <Setter Property="Height" Value="600"/>
        <Setter Property="CenterX" Value="300"/>
        <Setter Property="CenterY" Value="300"/>
        <Setter Property="InnerRadius" Value="150"/>
        <Setter Property="OuterRadius" Value="300"/>
        <Setter Property="Foreground" Value="#b7181a"/>
        <Setter Property="EdgeInnerRadius" Value="300"/>
        <Setter Property="EdgeOuterRadius" Value="320"/>
        <Setter Property="EdgeBackground" Value="Transparent"/>
        <Setter Property="EdgePadding" Value="3"/>
        <Setter Property="Panel.ZIndex" Value="0"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="controls:CircularMenuItem">
                    <Canvas Panel.ZIndex="{TemplateBinding Panel.ZIndex}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                        <!-- Main pie piece -->
                        <controls:PieShape
                            CenterX="{TemplateBinding CenterX}"
                            CenterY="{TemplateBinding CenterY}"
                            Padding="{TemplateBinding Padding}"
                            OuterRadius="{TemplateBinding OuterRadius}"
                            InnerRadius="{TemplateBinding InnerRadius}"
                            Fill="{TemplateBinding Color, Converter={StaticResource DrawingColorToSolidColorBrushConverter}}"
                            StrokeThickness="{Binding BorderThickness.Top, RelativeSource={RelativeSource AncestorType=controls:CircularMenuItem}}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StartAngle="{TemplateBinding StartAngle}"
                            AngleDelta="{TemplateBinding AngleDelta}">

                            <controls:PieShape.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="15" Color="#505050"/>
                            </controls:PieShape.Effect>
                        </controls:PieShape>

                        <!-- Edge pie piece -->
                        <controls:PieShape
                            CenterX="{TemplateBinding CenterX}"
                            CenterY="{TemplateBinding CenterY}"
                            Padding="{TemplateBinding EdgePadding}"
                            OuterRadius="{TemplateBinding EdgeOuterRadius}"
                            InnerRadius="{TemplateBinding EdgeInnerRadius}"
                            Fill="{TemplateBinding EdgeBackground}"
                            StartAngle="{TemplateBinding StartAngle}"
                            AngleDelta="{TemplateBinding AngleDelta}">
                        </controls:PieShape>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>